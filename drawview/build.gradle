apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'
apply plugin: 'maven'

/*ext {
    bintrayRepo = 'maven'
    bintrayName = 'DrawView'

    publishedGroupId = 'com.byox.drawview'
    libraryName = 'DrawView'
    artifact = 'drawview'

    libraryDescription = 'Android view that allows the user to create drawings. Customize settings like color, width or tools. Undo or redo actions.'

    siteUrl = 'https://github.com/ByoxCode/DrawView'
    gitUrl = 'https://github.com/ByoxCode/DrawView.git'

    libraryVersion = '1.3.1'

    developerId = 'byox'
    developerName = 'Oscar Medina'
    developerEmail = 'ing.medinacruz@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}*/
def pomConfig = {
    licenses {
        license {
            name "${licence_name}"
            url "${licence_url}"
            distribution "${licence_distribution}"
        }
    }
    developers {
        developer {
            id "${developer_id}"
            name "${developer_name}"
            email "${developer_email}"
        }
    }
    scm {
        url "${scm_url}"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            groupId "${maven_group_id}"
            artifactId "${maven_artifact_id}"
            version Boolean.valueOf(System.getProperty("snapshot")) ? "${snapshot_version}" : "${maven_version}"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', "${maven_description}")
                root.appendNode('name', "${maven_name}")
                root.appendNode('url', "${maven_url}")
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']

    pkg {
        repo = "${bintray_pkg_repo}"
        name = "${bintray_pkg_name}"
        licenses = ["${bintray_pkg_licences}"]
        vcsUrl = "${bintray_pkg_vcs_url}"
        version {
            /*name = '1.3.1'
            desc = '1.3.1'*/
            released  = new Date()
        }
    }

}

/*artifactory {
    contextUrl = "${snapshot_repo_context_url}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = "${snapshot_repo_key}"
            username = System.getProperty('bintray.user')
            password = System.getProperty('bintray.key')
        }
        defaults {
            publications('mavenPublication')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repository {
            repoKey = 'jcenter'
        }
    }
}*/

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(getProperty('aar.deployPath'))
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            packaging "aar"
            groupId "${maven_group_id}"
            artifactId "${maven_artifact_id}"
            version "${snapshot_version}"
        }
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 14
        versionName "1.3.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:animated-vector-drawable:27.1.1'
    implementation 'com.android.support:exifinterface:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'

    // THIRD PARTY
    api 'com.squareup.picasso:picasso:2.71828'
    api 'jp.wasabeef:picasso-transformations:2.2.1'
    api 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'

    implementation 'com.wonderkiln:camerakit:0.12.6'
}

/*apply from: 'https://raw.githubusercontent.com/numetriclabz/jcenter/master/installv.gradle'
apply from: 'https://raw.githubusercontent.com/numetriclabz/jcenter/master/bintrayv.gradle'*/
